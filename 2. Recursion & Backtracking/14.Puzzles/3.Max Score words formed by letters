Given a list of words, list of  single letters (might be repeating) and score of every character.

Return the maximum score of any valid set of words formed by using the given letters (words[i] cannot be used two or more times).

It is not necessary to use all characters in letters and each letter can only be used once. Score of letters 'a', 'b', 'c', ... ,'z' is given by score[0], score[1], ... , score[25] respectively.




class Solution {
public:
    
    int maxScore(int idx, vector<string>& words, int freq[], vector<int>& score) {
        if(idx == words.size())
            return 0;
        
        // yes wali call
        int currscore = 0;
        bool flag = true;
        for(auto ch: words[idx])
        {
            if(freq[ch-'a'] == 0)
                flag = false;
            
            freq[ch-'a']--;
            currscore += score[ch-'a'];
        }
        
        if(flag == true)
            currscore += maxScore(idx+1, words, freq, score);
        else
            currscore = 0;
        
        // backtrack
        for(auto ch: words[idx])
            freq[ch-'a']++;
        
        
        // no wali call
        return max(currscore, maxScore(idx+1, words, freq, score));
            
    }
    
    int maxScoreWords(vector<string>& words, vector<char>& letters, vector<int>& score) {
        int freq[26] = {0};
        
        for(auto ch: letters)
            freq[ch-'a']++;
        
        return maxScore(0, words, freq, score);
            
    }
};
