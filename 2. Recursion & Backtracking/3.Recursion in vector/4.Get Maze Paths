1. You are given a number n and a number m representing number of rows and columns in a maze.
2. You are standing in the top-left corner and have to reach the bottom-right corner. Only two moves are allowed 'h' (1-step horizontal) and 'v' (1-step vertical).
3. Complete the body of getMazePath function - without changing signature - to get the list of all paths that can be used to move from top-left to bottom-right.



#include<bits/stdc++.h>
using namespace std;

vector<string> getMazePaths(int sr, int sc, int dr, int dc)
{
    if(sr>dr || sc>dc)
    {
        vector<string> temp;
        return temp;
    }
    else if(sr == dr && sc == dc)
    {
        vector<string> base;
        base.push_back("");
        return base;
    }
    
    vector<string> hr = getMazePaths(sr, sc+1, dr, dc);
    vector<string> vr = getMazePaths(sr+1, sc, dr, dc);
    
    vector<string> ans;
    for(string s: hr)
        ans.push_back("h"+s);
    
    for(string s: vr)
        ans.push_back("v"+s); 
    
    return ans;    
}


void display(vector<string>& arr)
{
    cout << "[";
    for(int i = 0;i < arr.size();i++){
        cout << arr[i];
        if(i < arr.size() -1)
            cout << ", ";
    }
    
    cout << "]"<<endl;
}


int main()
{
    int n,m; cin >> n >> m;
    vector<string> ans = getMazePaths(0,0,n-1,m-1);
    display(ans);

    return 0;
}
