1. You are given a string exp representing an expression.
2. Assume that the expression is balanced  i.e. the opening and closing brackets match with each other.
3. But, some of the pair of brackets maybe extra/needless. 
4. You are required to print true if you detect extra brackets and false otherwise.

e.g.'
((a + b) + (c + d)) -> false
(a + b) + ((c + d)) -> true



#include <iostream>
#include <stack>
#include <string>

int main() {
    std::string str;
    std::getline(std::cin, str);

    std::stack<char> stk;

    for (int i = 0; i < str.length(); i++) {
        char ch = str[i];
        if (ch == ')') {
            int count = 0;

            // Fix: Check if the stack is not empty before accessing its top
            while (!stk.empty() && stk.top() != '(') {
                count++;
                stk.pop();
            }

            // Fix: Check if the stack is empty before popping
            if (!stk.empty()) {
                stk.pop();
            } else {
                // If the stack is empty, there is an extra ')', print true and return
                std::cout << "true" << std::endl;
                return 0;
            }

            if (count == 0) {
                std::cout << "true" << std::endl;
                return 0;
            }
        } else {
            stk.push(ch);
        }
    }

    // Fix: Check if the stack is empty after processing the entire string
    std::cout << (stk.empty() ? "true" : "false") << std::endl;

    return 0;
}
