1. You are given a number n, representing the number of people in a party.
2. You are given n strings of n length containing 0's and 1's
3. If there is a '1' in ith row, jth spot, then person i knows about person j.
4. A celebrity is defined as somebody who knows no other person than himself but everybody else knows him.
5. If there is a celebrity print it's index otherwise print "none".

Note -> There can be only one celebrity. Think why?


class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& mat, int n) 
    {
        stack<int> stk;
        for(int i = 0; i < n; i++) 
            stk.push(i);
            
        while(stk.size() > 1)    
        {
            int v2 = stk.top();
            stk.pop();
            int v1 = stk.top();
            stk.pop();
            
            if(mat[v1][v2] == 1) 
                stk.push(v2);
            else
                stk.push(v1);
        }
        
        int res = stk.top();
        stk.pop();
        bool flag = true;
        for(int r = 0; r < n; r++)
        {
            if(r == res)    continue;
            if(mat[r][res] == 0)
            {
                flag = false;
                break;
            }    
        }
        
        if(flag == false) return -1;
        
        for(int c = 0; c < n; c++)
        {
            if(c == res)    continue;
            if(mat[res][c] == 1)
            {
                flag = false;
                break;
            }    
        }
        if(flag == true)  return res ; return -1;
        
    }
};
