Given a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses 
substring



class Solution {
public:
    int longestValidParentheses(string s) {
        stack<int> stk;
        int maxLen = 0, j;

        for(int i=0; i<s.length(); i++) {
            char ch = s[i];

            if(ch == '(') {
                stk.push(i);
            }
            else {
                if(stk.size() > 0 && s[stk.top()] == '(') 
                    stk.pop();
                else 
                    stk.push(i);    
            }
            j = (stk.empty())? -1: stk.top();
            maxLen = max(maxLen, i-j);
        }

        return maxLen;
    }
};
