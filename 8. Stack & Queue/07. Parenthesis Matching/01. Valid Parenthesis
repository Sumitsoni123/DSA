Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.


class Solution {
public:
    bool isValid(string str) {
        stack<char> s;
        for (int i = 0; i < s.length(); i++) {
            char ch = s[i];

            if (ch == ')') {
                if (stk.empty())
                    return false;
                if (stk.top() == '(')
                    stk.pop();
                else
                    return false;
            } else if (ch == '}') {
                if (stk.empty())
                    return false;
                if (stk.top() == '{')
                    stk.pop();
                else
                    return false;
            } else if (ch == ']') {
                if (stk.empty())
                    return false;
                if (stk.top() == '[')
                    stk.pop();
                else
                    return false;
            } else {
                stk.push(ch);
            }
        }

        return stk.empty();
    }
};
