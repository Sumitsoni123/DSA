1. You are given a number n, representing the size of array a.
2. You are given n numbers, representing the prices of a share on n days.
3. You are required to find the stock span for n days.
4. Stock span is defined as the number of days passed between the current day and the first day before today when price was higher than today.

e.g.
for the array [2 5 9 3 1 12 6 8 7]
span for 2 is 1
span for 5 is 2
span for 9 is 3
span for 3 is 1
span for 1 is 1
span for 12 is 6
span for 6 is 1
span for 8 is 2
span for 7 is 1



#include <bits/stdc++.h>
using namespace std;

void display(const std::vector<int>& a) {
    for (int val : a) {
        cout << val << "\n";
    }
}

std::vector<int> solve(const std::vector<int>& arr) {
    // solve
    stack<int> stk;
    int n = arr.size();
    vector<int> nge(n);

    for (int i = 0; i < n; i++) {
        int curr = arr[i];
        // pop smaller elements
        while (!stk.empty() && stk.top() < curr) {
            stk.pop();
        }

        // return ans -> stack Top
        if (stk.empty()) {
            nge[i] = i + 1;
        } else {
            nge[i] = i - stk.top();
        }

        // push curr element
        stk.push(curr);
    }
    return nge;
}

int main() {
    int n;
    std::cin >> n;

    std::vector<int> a(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a[i];
    }

    std::vector<int> nge = solve(a);
    display(nge);

    return 0;
}
