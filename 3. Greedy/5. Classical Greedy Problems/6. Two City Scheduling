A company is planning to interview 2n people. Given the array costs where costs[i] = [aCosti, bCosti], the cost of flying the ith person to city a is aCosti, and the cost of flying the ith person to city b is bCosti.

Return the minimum cost to fly every person to a city such that exactly n people arrive in each city.



class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        
        vector<int> diff;
        int cost = 0;
        for(auto v: costs)
        {
            diff.push_back(v[0]-v[1]);
            cost += v[1];
        }
        
        sort(diff.begin(), diff.end());
        int nby2 = costs.size()/2;
        for(auto v : diff)
        {
            if(nby2)
            {
                cost += v;
                nby2--;
            }  
        }
        
        return cost;
    }
};
