1. You are given a string(str) and a number K.
2. You have to find the length of longest substring of the given string that contains at most K unique characters.



#include<bits/stdc++.h>
using namespace std;


int main()
{
    string str;
    cin>>str;
    
    int k, left = 0, maxLen = INT_MIN, start = 0;
    cin>>k;
    
    unordered_map<char, int> frq;
    for(int right = 0; right < str.length(); right++)
    {
        frq[str[right]]++;
        
        while(frq.size() > k)
        {
            frq[str[left]]--;
            
            if(frq[str[left]] == 0)
                frq.erase(str[left]);
            
            left++;    
        }                
        
        maxLen = max(maxLen, right - left +1);    
    }
    
    cout<<maxLen<<endl;
    return 0;
}
