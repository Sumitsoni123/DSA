Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.




class Solution {
public:
    
    int twoSumGreater(vector<int>& nums, int right, int target) {
        int left = 0, cnt = 0;
        
        while(left < right)
        {
            int sum = nums[left] + nums[right];
            
            if(sum > target)
            {
                cnt += right - left;
                right--;
            }
            else
                left++;
        }
        
        return cnt;
    }
    
    int triangleNumber(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        
        int cnt = 0;
        for(int i=nums.size()-1; i>1; i--)
        {
            cnt += twoSumGreater(nums, i-1, nums[i]);
        }
        
        return cnt;
    }
};
