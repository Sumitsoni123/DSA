Given an array of n integers nums and a target, find the number of index triplets i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.



// TC- O(N^2)
class Solution {
public:
    int threeSumSmaller(vector<int> &nums, int target) {
        // Write your code here
        int n = nums.size();

        sort(nums.begin() , nums.end());

        int ans = 0;
        for(int i = 0 ; i < n ; i++)
        {
            int start = i + 1;
            int end = n - 1;
            // if(i > 0 && nums[i] == nums[i - 1])
            //     continue; 
            
            while(start < end)
            {
                if(nums[i] + nums[start] + nums[end] < target) {
                    ans+= end-start;
                    start++;
                }
                else 
                    end--;
            }
	    }

	    return ans;    
    }
};
