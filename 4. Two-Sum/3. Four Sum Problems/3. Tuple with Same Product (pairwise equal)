Given an array nums of distinct positive integers, return the number of tuples (a, b, c, d) such that a * b = c * d where a, b, c, and d are elements of nums, and a != b != c != d.



// TC- O(N^2)
class Solution {
public:
    int tupleSameProduct(vector<int>& nums) {
        unordered_map<int, int> AB;
        
        int n = nums.size();
        for(int i=0; i<n; i++)
        {
            for(int j=i+1; j<n; j++)
            {          
                int prod = nums[i]*nums[j];
                AB[prod]++;
                
            }
        }
        
        int cnt = 0;
        
        for(auto e: AB)
        {
            cnt += (e.second)*(e.second-1)/2;
        }
        
        return cnt*8;
    }
};
