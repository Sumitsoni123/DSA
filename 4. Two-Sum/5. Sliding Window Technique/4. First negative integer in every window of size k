Given an array A[] of size N and a positive integer K, find the first negative integer for each and every window(contiguous subarray) of size K.



vector<long long> printFirstNegativeInteger(long long int arr[],
                                             long long int n, long long int k) {
    
    vector<long long> ans;
    deque<long long> dq;
    for(int i=0; i<k; i++) {
        if(arr[i] < 0)
            dq.push_back(i);
    }
    
    int r = (dq.size() == 0)? 0: arr[dq.front()];
    ans.push_back(r);    
    
    for(int j=k; j<n; j++)
    {
        if(dq.size() > 0 && dq.front() <= j-k)
            dq.pop_front();
        
        if(arr[j] < 0)
            dq.push_back(j);
        
        int r = (dq.size() == 0)? 0: arr[dq.front()];
        ans.push_back(r);       
    }
    
    return ans;
 }
