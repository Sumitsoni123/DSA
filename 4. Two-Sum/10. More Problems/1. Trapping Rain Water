Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

// TC- 0{n}

class Solution {
    
    
    public int trap(int[] height)
    {
        int n = height.length;
        // with extra space
//         
//         int[] left = new int[n];
//         left[0] = height[0];
//         int[] right = new int[n];
//         right[n-1] = height[n-1];
        
//         for(int i=1; i<n; i++)
//             left[i] = Math.max(left[i-1], height[i]);
        
//         for(int i=n-2; i>=0; i--)
//             right[i] = Math.max(right[i+1], height[i]);
        
//         int ans = 0;
//         for(int i=0; i<n; i++)
//         {
//             ans += (Math.min(left[i], right[i]) - height[i]);
//         }
        
        
        // without extra space
        
        int l = 0, r = n-1, leftmax = 0, rightmax = 0, ans = 0;
        
        while(l<=r)
        {
            if(height[l] <= height[r])
            {
                if(height[l] >= leftmax)
                    leftmax = height[l];
                
                else
                    ans += leftmax - height[l];
                
                l++;
            }
            else
            {
                if(height[r] >= rightmax)
                    rightmax = height[r];
                
                else
                    ans += rightmax - height[r];
                
                r--;
            }
        }
        return ans;
    }
}
