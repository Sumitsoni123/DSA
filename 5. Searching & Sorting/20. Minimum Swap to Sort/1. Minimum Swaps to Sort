Given an array of n distinct elements. Find the minimum number of swaps required to sort the array in strictly increasing order.



int countSwaps(int arr[], int n)
	{
	    // Your code goes here
	    vector<pair<int, int>> v;
	    for(int i=0; i<n; i++)
	        v[i] = {arr[i],i};
	    
	    int cnt = 0;
	    sort(v.begin(), v.end());
	    
	    for(int i=0; i<n; i++)
	    {
	        if(v[i].second !== i)
	        {
	            cnt++;
	            swap(v[i], v[v[i].second]);
	            i--;
	        }
	    }
	    
	    return cnt;
	}
