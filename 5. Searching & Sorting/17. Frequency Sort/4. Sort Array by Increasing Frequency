class Solution
{
    class comp {
        public: 
            bool operator()(pair<int,int>& a, pair<int,int>& b)
            {
                if(a.first != b.first) return a.first > b.first;
                return a.second < b.second;
            }
    };
    public:
        vector<int> frequencySort(vector<int>& nums) 
        {
            unordered_map<int,int> m;
            for(auto e: nums)
                m[e]++;
            
            priority_queue<pair<int, int>, vector<pair<int, int>>, comp> pq;
            for(auto e: m)
            {
                pq.push({e.second, e.first});
            }

            vector<int> ans;
            while(!pq.empty())
            {
                int f = pq.top().first;
                while(f--)
                    ans.push_back(pq.top().second);

                pq.pop();                    
            }
            return ans;
        }
};
