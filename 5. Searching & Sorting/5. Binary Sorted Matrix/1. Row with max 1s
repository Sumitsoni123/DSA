Given a boolean 2D array of n x m dimensions where each row is sorted. Find the 0-based index of the first row that has the maximum number of 1's.



//User function template for C++
class Solution{
public:
    int lowerBound(vector<int> arr, int r) 
    {
        int l = 0;
        
        int ans = r+1;
        while(l <= r)
        {
            int mid = l+(r-l)/2;
            
            if(1 <= arr[mid])
            {
                ans = mid;
                r = mid-1;
            }
            else
                l = mid+1;
            
        }
        return ans;
    }
    
	int rowWithMax1s(vector<vector<int>> arr, int n, int m) 
	{
	    // code here
	    int ans = -1, cnt = 0, r = m-1;
	    for(int i=0; i<n; i++)
	    {
	        int lower = lowerBound(arr[i], r);
	        
	        if(lower != m)
	        {
	            if(m - lower > cnt)
	            {
	                cnt = m - lower;
	                ans = i;
	            }
	            r = lower - 1;
	        }
	        
	    }
	    return ans;
	}

};
