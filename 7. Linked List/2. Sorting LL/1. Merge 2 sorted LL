Given two sorted linked lists consisting of N and M nodes respectively. The task is to merge both of the list (in-place) and return head of the merged list.


/* Link list Node
struct Node {
  int data;
  struct Node *next;
  
  Node(int x) {
    data = x;
    next = NULL;
  }
};
*/
//Function to merge two sorted linked list.
Node* sortedMerge(Node* head1, Node* head2)  
{  
    // code here
    Node* dummy = new Node(-1);
    Node* head = dummy;
    Node* tail = dummy;
    
    while(head1 != NULL && head2 != NULL)
    {
        if(head1->data < head2->data)
        {
            tail->next = head1;
            head1 = head1->next;
        }
        else
        {
            tail->next = head2;
            head2 = head2->next;  
        }
        tail = tail->next;
    }
    
    if(head1 != NULL)   tail->next = head1;
    else tail->next = head2;
    return dummy->next;
} 
