Node* helper(Node* root, int &k, int node) {
    if(root == NULL) return NULL;
    
    if(node == root->data) 
        return root;
    
    Node* left = helper(root->left, k, node);
    Node* right = helper(root->right, k, node);
    
    if(left != NULL && right == NULL) {
        k--;
        if(k<=0) {
            k = INT_MAX;
            return root;
        }
        return left;
    }
    if(left == NULL && right != NULL) {
        k--;
        if(k<=0) {
            k = INT_MAX;
            return root;
        }
        return right;
    }
    
    return NULL;
}

int kthAncestor(Node *root, int k, int node) {
    // Code here
    Node* ans = helper(root, k, node);
    if(ans == NULL || ans->data == node) 
        return -1;
    
    return ans->data;    
}
