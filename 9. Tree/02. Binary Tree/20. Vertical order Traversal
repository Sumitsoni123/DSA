class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        if(!root)   return ans;

        queue<pair<TreeNode*, pair<int, int>>> q;
        map<int, map<int, multiset<int>>> ds;

        q.push({root, {0, 0}});
        while(!q.empty()) {
            auto temp = q.front();
            q.pop();

            TreeNode* node = temp.first;
            int v = temp.second.first, l = temp.second.second;

            ds[v][l].insert(node->val);
            if(node->left) 
                q.push({node->left, {v-1, l+1}});
            if(node->right) 
                q.push({node->right, {v+1, l+1}});         
        }

        for(auto p: ds) {
            vector<int> col;
            for(auto q: p.second) {
                col.insert(col.end(), q.second.begin(), q.second.end());
            }
            ans.push_back(col);
        }
        return ans;
    }
};
