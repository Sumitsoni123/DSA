/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> postorder;
        if(root == NULL) return postorder;
        stack<TreeNode*> stk1, stk2;
        TreeNode* node = root;
        stk1.push(node);
        while(!stk1.empty()) {
            node = stk1.top();
            stk1.pop();
            stk2.push(node);

            if(node->left != NULL) 
                stk1.push(node->left);
            if(node->right != NULL) 
                stk1.push(node->right);    
        }

        while(!stk2.empty()) {
            postorder.push_back(stk2.top()->val);
            stk2.pop();
        }

        return postorder;
    }
};
