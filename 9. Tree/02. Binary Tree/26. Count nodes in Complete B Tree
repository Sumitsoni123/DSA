/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int leftHeight(TreeNode* node) {
        int count = 0;
        while(node) {
            node = node->left;
            count++;
        }
        return count;   
    }
    int rightHeight(TreeNode* node) {
        int count = 0;
        while(node) {
            node = node->right;
            count++;
        }
        return count;   
    }

    int countNodes(TreeNode* root) {
        if(!root) return 0;

        int lh = leftHeight(root);
        int rh = rightHeight(root);

        if(lh == rh)    
            return (1<<lh) -1;

        return countNodes(root->left) + countNodes(root->right) +1; 
    }
};
