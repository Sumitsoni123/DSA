Given a string of length N of lowercase alphabet characters. The task is to complete the function countDistinctSubstring(), which returns the count of total number of distinct substrings of this string.


/*You are required to complete this method */
class GfG
{
    public static class Node
    {    
        private Node[] children = new Node[26];   // null stoted by default
        public int prefCount = 0;
        public int end = 0;
        
        public boolean contains(char ch) {
            return (children[ch-'a'] != null);
        }
        
        public Node get(char ch) {         // getter
            return children[ch-'a'];
        }
        
        public void set(char ch) {         // setter
            children[ch-'a'] = new Node();
        }
        
    }
    public static int countDistinctSubstring(String s)
    {
       //your code here
        Node root = new Node();
        int count = 1;
        for(int i=0; i<s.length(); i++)
        {
            Node curr = root;
            for(int j=i; j<s.length(); j++)
            {
                if(curr.get(s.charAt(j)) == null)
                {
                    curr.set(s.charAt(j));
                    count++;
                }    
                
                curr = curr.get(s.charAt(j));
            }
        }
        return count;
    }
}
