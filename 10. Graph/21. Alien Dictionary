Given a sorted dictionary of an alien language having N words and k starting alphabets of standard dictionary. Find the order of characters in the alien language.
Note: Many orders may be possible for a particular test case, thus you may return any valid order and output will be 1 if the order of string returned by the function is correct else 0 denoting incorrect string returned.



class Solution {
    private:
    vector<int> topoSort(int V, vector<int> adj[]) {
        int indegree[V] = {0};
        
        for(int i=0; i<V; i++) {
            for(auto it: adj[i]) {
                indegree[it]++;
            }
        }
        
        queue<int> q;
        for(int i=0; i<V; i++) {
            if(indegree[i] == 0) {
                q.push(i);
            }
        }
        
        vector<int> res;
        while(!q.empty()) {
            int front = q.front();
            q.pop();
            
            res.push_back(front);
            for(auto it: adj[front]) {
                indegree[it]--;
                if(indegree[it] == 0) 
                    q.push(it);
            }
        }
        
        return res;
    }
    
    public:
    string findOrder(string dict[], int n, int k) {
        //code here
        vector<int> adj[k];
        for(int i=0; i<n-1; i++) {
            string s1 = dict[i];
            string s2 = dict[i+1];
            
            int minLen = min(s1.length(), s2.length());
            for(int ptr=0; ptr<minLen; ptr++) {
                
                if(s1[ptr] != s2[ptr]) {
                    adj[s1[ptr] - 'a'].push_back(s2[ptr] - 'a');
                    break;
                }
            }
        }
        
        vector<int> topo = topoSort(k, adj);
        string ans = "";
        for(auto it: topo) {
            ans += char(it + 'a');
        }
        
        return ans;
    }
};
