Given a weighted, undirected and connected graph of V vertices and E edges. The task is to find the sum of weights of the edges of the Minimum Spanning Tree. Given adjacency list adj as input parameters . Here adj[i] contains vectors of size 2, where the first integer in that vector denotes the end of the edge and the second integer denotes the edge weight.


class Solution {
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[]) {
        // min-heap
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        
        vector<int> vis(V, 0);
        
        // {wt, node}
        pq.push({0, 0});
        int sum = 0;
        
        while(!pq.empty()) {
            
            auto it = pq.top();
            pq.pop();
            
            int node = it.second;
            int wt = it.first;
            
            if(vis[node] == 1) continue;
            
            sum += wt;
            vis[node] = 1;
            
            for(auto it: adj[node]) {
                
                int adjNode = it[0];
                int edWt = it[1];
                
                if(!vis[adjNode]) {
                    pq.push({edWt, adjNode});
                }
            }
        }
        
        return sum;
    }
};
